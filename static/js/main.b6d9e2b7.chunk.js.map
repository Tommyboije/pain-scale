{"version":3,"sources":["components/Banner.js","components/Field.js","components/Form.js","components/Results.js","App.js","index.js"],"names":["Banner","className","activeClass","dataValue","fieldValue","Number","Field","title","description","number","scaleNum","buttonHandler","reactKey","console","log","data-id","href","onClick","data-value","renderScale","Form","state","fields","map","value","index","key","renderFields","to","Results","React","useState","longLasting","accute","mixed","patientName","yourName","sent","spinner","resultState","setState","resultIndicator","x","y","pP","painPoints","handleChange","e","persist","target","name","type","checked","maxLength","readOnly","onSubmit","preventDefault","messageHtml","field","i","join","lasting","templateParams","window","emailjs","send","then","response","catch","error","htmlFor","onChange","class","App","parent","parentNode","parentId","getAttribute","children","querySelectorAll","activeChildValue","querySelector","targetValue","total","parseInt","fieldsCopy","Array","from","classList","indexOf","remove","add","exact","path","render","props","Component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.b6d9e2b7.chunk.js","sourcesContent":["import React from 'react';\n\nconst Banner = () => {\n  return (\n      <div className=\"banners\">\n        <i className=\"banner-1\"></i>\n        <i className=\"banner-2\"></i>\n        <i className=\"banner-3\"></i>\n        <i className=\"banner-4\"></i>\n        <i className=\"banner-5\"></i>\n      </div>\n  );\n}\n\nexport default Banner;","import React from 'react';\n\nconst activeClass = (dataValue, fieldValue) => {\n  return dataValue === Number(fieldValue) ? 'active': '';\n}\n\nconst renderScale = (scaleNum, buttonHandler, reactKey, fieldValue) => {\n\n  console.log(Number(fieldValue));\n    switch(scaleNum) {\n      case 1:\n        return (\n          <div className=\"scale-info\" data-id={reactKey}>\n            <a href=\"# \" className={`button ${activeClass(0, fieldValue)}`} onClick={buttonHandler} data-value=\"0\">Inte alls=0</a>\n            <a href=\"# \" className={`button ${activeClass(1, fieldValue)}`} onClick={buttonHandler} data-value=\"1\">Sällan=1</a>\n            <a href=\"# \" className={`button ${activeClass(2, fieldValue)}`} onClick={buttonHandler} data-value=\"2\">Ibland=2</a>\n            <a href=\"# \" className={`button ${activeClass(3, fieldValue)}`} onClick={buttonHandler} data-value=\"3\">Ofta=3</a>\n          </div>\n        );\n      break;\n      case 2:\n        return (\n          <div className=\"scale-info\" data-id={reactKey}>\n            <a href=\"# \" className={`button ${activeClass(0, fieldValue)}`} onClick={buttonHandler} data-value=\"0\">Inte alls=0</a>\n            <a href=\"# \" className={`button ${activeClass(1, fieldValue)}`} onClick={buttonHandler} data-value=\"1\">Lite=1</a>\n            <a href=\"# \" className={`button ${activeClass(2, fieldValue)}`} onClick={buttonHandler} data-value=\"2\">Måttligt=2</a>\n            <a href=\"# \" className={`button ${activeClass(3, fieldValue)}`} onClick={buttonHandler} data-value=\"3\">Mycket=3</a>\n          </div>\n        );\n      break;\n\n      default:\n        return (<></>);\n    }\n}\n\nconst Field = ({ title, description, number, scaleNum, buttonHandler, reactKey, fieldValue }) => {\n  return (\n      <div className=\"field\">\n        <div className=\"field-content\">\n          <h4 className=\"field-title\">{number}. {title}</h4>\n          <p className=\"field-description\">{description}</p>\n          <i className=\"word-break\"></i>\n          {renderScale(scaleNum, buttonHandler, reactKey, fieldValue)}\n        </div>\n      </div>\n  );\n}\n\nexport default Field;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Field from './Field';\n\nconst renderFields = (state, buttonHandler) => {\n  return state.fields.map((value, index) => {\n    return <Field title={value.title} description={value.description} number={index+1} key={index} reactKey={index} scaleNum={value.scaleNum} buttonHandler={buttonHandler} fieldValue={value.fieldValue}/>\n  })\n}\n\nconst Form = ({state, buttonHandler}) => {\n  return (\n    <>\n    <div className=\"pain-scale\">\n      <h1 className=\"title\">Bedömning</h1>\n        <p className=\"intro\">Observera personen och bedöm graden av påverkan med skalan <b>0 till 3</b> i punkt 1 till 6 nedan!</p>\n        {renderFields(state, buttonHandler)}\n\n        <Link className=\"link link-results\" to=\"/results\">Se resultat ></Link>\n      </div>\n    </>\n  );\n};\n\nexport default Form;","import React, { Component, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Results = ({state}) => {\n    const [resultState, setState] = React.useState({\n      longLasting: false,\n      accute: false,\n      mixed: false,\n      patientName: '',\n      yourName: '',\n      sent: '',\n      spinner: false\n    })\n\n    const resultIndicator = (x, y) => {\n      const pP = state.painPoints;\n      return pP >= x && pP <= y ? '' : 'inactive';\n    }\n    \n    const handleChange = (e) => {\n      e.persist();\n      const value = e.target.value;\n      const name = e.target.name;\n      const type = e.target.type;\n      const checked = e.target.checked;\n\n      if (type == 'checkbox') {\n        setState({\n          ...resultState,\n          [name]: checked\n        });\n      } else {\n        setState({\n          ...resultState,\n          [name]: value\n        });\n      }\n    }\n\n    const handleSubmit = e => {\n      e.preventDefault();\n      e.persist();\n\n      setState({\n        spinner: true\n      })\n\n      const messageHtml = `\n        <ul>\n          ${state.fields.map((field, i) => {\n            return `<li>\n                <span>${i+1}. ${field.title}: </span>\n                <b>${field.fieldValue}</b>\n              </li>`;\n          }).join('')}\n        </ul>\n\n        <span><b>Total: </b>${state.painPoints}</span>\n\n        <br></br>\n\n        <span><b>Smärtnivå: </b></span>\n        ${resultIndicator(0,2) == 'inactive' ?  '' : '<span>Ingen (0-2)</span>'}\n        ${resultIndicator(3,7) == 'inactive' ?  '' : '<span>Mild (3-7)</span>'}\n        ${resultIndicator(8,13) == 'inactive' ?  '' : '<span>Måttlig (8-13)</span>'}\n        ${resultIndicator(14,18) == 'inactive' ?  '' : '<span>Svår (14-18)</span>'}\n\n        <br></br>\n        <br></br>\n\n        <span>Typ av smärta</span>\n        <ul>\n          <li>\n            <b>Långvarig: </b>${resultState.lasting ? 'Ja' : 'Nej'}\n          </li>\n          <li>\n            <b>Akut: </b>${resultState.accute ? 'Ja' : 'Nej'}\n          </li>\n          <li>\n            <b>Blandad: </b>${resultState.mixed ? 'Ja' : 'Nej'}\n          </li>\n        </ul>\n\n        <span><b>Namn på patient: </b>${resultState.patientName}</span>\n        <br></br>\n        <span><b>Ditt namn: </b>${resultState.yourName}</span>\n      `;\n\n      const templateParams = {\n        // \"to_email\": \"max.frederiksen@ecsolutions.se\",\n        \"to_email\": \"Tommy.Boije@helsingborg.se\",\n        \"from_name\": \"Pain Scale App\",\n        \"from_email\": \"max.frederiksen@ecsolutions.se\",\n        \"reply_to\": \"max.frederiksen@ecsolutions.se\",\n        \"to_name\": resultState.yourName,\n        \"message_html\": messageHtml\n      };\n\n      window.emailjs.send('gmail', 'template_BxjtD38x', templateParams)\n        .then(response => {\n          setState({\n            sent: 'Bedömning skickad!',\n            spinner: false\n          })\n        })\n        .catch(error => console.log(error));\n    \n    }\n    \n    return (\n      <>\n        <div className=\"result\">\n          <h3>Resultat</h3>\n          <i className=\"word-break\"></i>\n          <p>Dina observation tyder på att personens antagna smärtnivå är:</p>\n          <div className=\"result-content\">\n            <div className=\"result-scale\">\n              <span className={`none ${resultIndicator(0, 2)}`}>Ingen (0-2)</span>\n              <span className={`mild ${resultIndicator(3, 7)}`}>Mild (3-7)</span>\n              <span className={`moderate ${resultIndicator(8, 13)}`}>Måttlig (8-13)</span>\n              <span className={`accute ${resultIndicator(14, 18)}`}>Svår (14+)</span>\n              \n              <input className=\"result-input\" type=\"text\" name=\"result-input\" maxLength=\"2\" value={state.painPoints} readOnly></input>\n            </div>\n            \n\n            <form className=\"result-form\" onSubmit={handleSubmit}>\n              <span><b>Typ av smärta</b></span>\n              <br></br>\n              <span>Ange typ av smärta nedan</span>\n              <br></br>\n              <br></br>\n\n              <div className=\"checkboxes\">\n                <div>\n                  <label htmlFor=\"long-lasting\">Långvarig</label>\n                  <label htmlFor=\"long-lasting\">Akut</label>\n                  <label htmlFor=\"long-lasting\">Blandad</label>\n                </div>\n                <div>\n                  <input className=\"input-checkbox\" type=\"checkbox\" name=\"lasting\" checked={resultState.lasting} onChange={handleChange}></input>\n                  <input className=\"input-checkbox\" type=\"checkbox\" name=\"accute\" checked={resultState.accute} onChange={handleChange}></input>\n                  <input className=\"input-checkbox\" type=\"checkbox\" name=\"mixed\" checked={resultState.mixed} onChange={handleChange}></input>\n                </div>\n              </div>\n\n              <label htmlFor=\"patient-name\">Namn på patient</label>\n              <input className=\"input-text\" type=\"text\" name=\"patientName\" value={resultState.patientName} onChange={handleChange}></input>\n\n              <label htmlFor=\"your-name\">Ditt namn</label>\n              <input className=\"input-text\" type=\"text\" name=\"yourName\" value={resultState.yourName} onChange={handleChange}></input>\n              <div>\n                <Link to=\"pain-scale\" className=\"previous\">&lt; Föregående</Link>\n                <button type=\"submit\" className=\"link\">Skicka</button>\n                <span>\n                  <div class={`spinner ${resultState.spinner ? '' : 'hidden'}`}>\n                    <div class=\"bounce1\"></div>\n                    <div class=\"bounce2\"></div>\n                    <div class=\"bounce3\"></div>\n                  </div>\n                </span>\n              </div>\n              <span class=\"sent\">{resultState.sent}</span>\n            </form>\n\n          </div>\n        </div>\n      </>\n    );\n};\n\nexport default Results;","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport Banner from './components/Banner';\nimport Form from './components/Form';\nimport Results from './components/Results';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      painPoints: 0,\n      fields: [\n        {\n          title: 'Röstuttryck/ljud',\n          description: 'Tex om personen gnyr, jämrar sig eller låter',\n          scaleNum: 1,\n          fieldValue: 0\n        },\n        {\n          title: 'Ansiktsuttryck',\n          description: 'Tex spänd, rynkar näsan, grimaserar eller ser rädd ut',\n          scaleNum: 1,\n          fieldValue: 0\n        },\n        {\n          title: 'Förändrat kroppsspråk',\n          description: 'Tex rastlös, vaggar, skyddar en kroppsdel eller ihopkrupen',\n          scaleNum: 2,\n          fieldValue: 0\n        },\n        {\n          title: 'Förändrat beteende',\n          description: 'Tex ökad förvirring, matvägran, ökad eller minskad kroppsaktivitet',\n          scaleNum: 2,\n          fieldValue: 0\n        },\n        {\n          title: 'Fysiologisk förändring',\n          description: 'Tex förändrad kroppstemperatur, puls eller blodtryck, svettningar, rodnad eller blekhet i hyn',\n          scaleNum: 2,\n          fieldValue: 0\n        },\n        {\n          title: 'Kroppsliga förändringar',\n          description: 'Tex rivet skinn, tryckskador, kontrakturer eller andra skador',\n          scaleNum: 2,\n          fieldValue: 0\n        },\n      ]\n    };\n  }\n\n\n  buttonHandler = (e) => {\n    e.preventDefault();\n    e.persist();\n\n    const parent = e.target.parentNode;\n    const parentId = parent.getAttribute('data-id');\n    const children = parent.querySelectorAll('.button');\n    const activeChildValue = parent.querySelector('.active').getAttribute('data-value');\n    const targetValue = e.target.getAttribute('data-value');\n    const total = parseInt(targetValue) - parseInt(activeChildValue);\n    const fieldsCopy = [...this.state.fields];\n    fieldsCopy[parentId].fieldValue = targetValue;\n\n    if (Array.from(e.target.classList).indexOf('active') === -1) {\n      for (let child of children) {\n        child.classList.remove('active')\n      }\n\n      e.target.classList.add('active');\n\n      this.setState({\n        painPoints: this.state.painPoints + total,\n        fields: fieldsCopy\n      }, () => console.log(this.state));\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Banner />\n        <div className=\"page-content\">\n          <Router>\n            <Route exact path=\"/\" render={(props) => <Form {...props} state={this.state} buttonHandler={this.buttonHandler}/>} />\n            <Route exact path=\"/pain-scale\" render={(props) => <Form {...props} state={this.state} buttonHandler={this.buttonHandler}/>} />\n            <Route exact path=\"/results\" render={(props) => <Results {...props} state={this.state}/>} />\n          </Router>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}