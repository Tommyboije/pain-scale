{"version":3,"sources":["history.js","components/Field.js","components/Navigation.js","components/Form.js","components/Results.js","App.js","index.js"],"names":["createBrowserHistory","activeClass","dataValue","fieldValue","Field","title","description","number","scaleNum","buttonHandler","reactKey","fieldDisabled","className","data-id","href","onClick","data-value","renderScale","Navigation","state","settingsHandler","changeHandler","hidePopup","type","name","value","receiverEmailInput","onChange","placeholder","target","rel","Form","src","alt","fields","map","index","key","renderFields","disableShowResults","to","process","Results","useState","sent","error","spinner","resultState","setState","useEffect","window","scrollTo","history","push","resultIndicator","x","y","pP","painPoints","onSubmit","e","preventDefault","persist","messageHtml","field","i","join","lasting","accute","mixed","patientName","yourName","templateParams","emailjs","send","then","catch","checked","htmlFor","class","App","parent","parentNode","parentNextSibling","nextSibling","parentId","getAttribute","children","querySelectorAll","activeChildValue","querySelector","targetValue","total","parseInt","fieldsCopy","disabledFields","document","classList","remove","Number","length","Array","from","indexOf","add","infoHandler","hideInfoBox","infoIconFilled","getElementsByTagName","toggle","receiverTelInput","basename","exact","path","render","props","Component","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.82a7fabb.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory();","import React from 'react';\n\nconst activeClass = (dataValue, fieldValue) => {\n  return dataValue === fieldValue ? 'active': '';\n}\n\nconst renderScale = (scaleNum, buttonHandler, reactKey, fieldValue) => {\n    switch(scaleNum) {\n      case 1:\n        return (\n          <div className=\"scale-info\" data-id={reactKey}>\n            <a href=\"# \" className={`button ${activeClass(0, fieldValue)}`} onClick={buttonHandler} data-value=\"0\">Inte alls</a>\n            <a href=\"# \" className={`button ${activeClass(1, fieldValue)}`} onClick={buttonHandler} data-value=\"1\">Sällan</a>\n            <a href=\"# \" className={`button ${activeClass(2, fieldValue)}`} onClick={buttonHandler} data-value=\"2\">Ibland</a>\n            <a href=\"# \" className={`button ${activeClass(3, fieldValue)}`} onClick={buttonHandler} data-value=\"3\">Ofta</a>\n          </div>\n        );\n      case 2:\n        return (\n          <div className=\"scale-info\" data-id={reactKey}>\n            <a href=\"# \" className={`button ${activeClass(0, fieldValue)}`} onClick={buttonHandler} data-value=\"0\">Inte alls</a>\n            <a href=\"# \" className={`button ${activeClass(1, fieldValue)}`} onClick={buttonHandler} data-value=\"1\">Lite</a>\n            <a href=\"# \" className={`button ${activeClass(2, fieldValue)}`} onClick={buttonHandler} data-value=\"2\">Måttligt</a>\n            <a href=\"# \" className={`button ${activeClass(3, fieldValue)}`} onClick={buttonHandler} data-value=\"3\">Mycket</a>\n          </div>\n        );\n\n      default:\n        return (<></>);\n    }\n}\n\nconst Field = ({ title, description, number, scaleNum, buttonHandler, reactKey, fieldValue }) => {\n  let fieldDisabled = '';\n  if (reactKey !== 0) fieldDisabled = fieldValue === null ? 'disabled-field' : '';\n\n  return (\n      <div className={`field ${fieldDisabled}`}>\n        <div className=\"field-content\">\n          <div>\n            <b className=\"field-number\">{number}. </b>\n          </div>\n          <div>\n            <h4 className=\"field-title\">{title}</h4>\n            <p className=\"field-description\">{description}</p>\n            <i className=\"word-break\"></i>\n            {renderScale(scaleNum, buttonHandler, reactKey, fieldValue)}\n          </div>\n        </div>\n      </div>\n  );\n}\n\nexport default Field;\n","import React from 'react';\n\nconst Navigation = ({ state, title, settingsHandler, changeHandler }) => {\n  return (\n    <nav className=\"nav\">\n      <div className=\"nav-container\">\n        <h1 className=\"title\">{title}</h1>\n        <a href=\"# \" onClick={settingsHandler} className=\"settings-link\"><i className=\"settings-icon\"></i></a>\n      </div>\n      <div className={`popup ${state.hidePopup ? 'hidden' : ''}`}>\n        <div className=\"popup-module\">\n          <div className=\"popup-content\">\n            <div className=\"popup-top-bar\">\n              <h3 className=\"sub-title\">Bedömning skickas till...</h3>\n              <a href=\"# \" onClick={settingsHandler} className=\"close-link\"><i className=\"close\"></i></a>\n            </div>\n\n            <input className=\"input-text input-popup\" type=\"email\" name=\"receiverEmailInput\" value={state.receiverEmailInput} onChange={changeHandler} placeholder=\"E-post...\"></input>\n            {/* <input className=\"input-text input-popup\" type=\"tel\" name=\"receiverTelInput\" value={state.receiverTelInput} onChange={changeHandler} placeholder=\"Sms till...\"></input> */}\n            <a href=\"# \" onClick={settingsHandler} className=\"link popup-link\">Spara</a>\n          </div>\n\n            <div className=\"popup-section\">\n              <p className=\"text-gray\">\n                Det här verktyget är en digital variant av smärtskattningsskalan <a href=\"http://media.palliativ.se/2015/08/AbbeyPalliativ2011Sve1.pdf\" target=\"_blank\" rel=\"noopener no referrer\">Abbey Pain Scale</a>, en smärtskattningsskala för användning vid vård av personer med nedsatta funktioner eller som inte kan verbalisera sin smärta.\n                <br></br>\n                <br></br>\n                <span className=\"text-medium\">Du kan läsa mer om skattning av smärta på </span>\n                <a href=\"https://www.vardhandboken.se/vard-och-behandling/akut-bedomning-och-skattning/smartskattning-av-akut-och-postoperativ-smarta/smartskattningsinstrument/\" target=\"_blank\" rel=\"noopener noreferrer\">vardhandboken.se</a>\n              </p>\n            </div>\n\n            <div className=\"popup-section\">\n              <h3 className=\"copyright\">Appen är utvecklad av Max på Hbg Works.</h3>\n              <p className=\"text-gray\">Har du också en idé till en lösning som skulle förenkla livet i din verksamhet?</p>\n              <a href=\"mailto:hbgworks@helsingborg.se\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"link cta-button\">Hör av dig! &#10084;&#65039;</a>\n            </div>\n        </div>\n      </div>\n    </nav>\n  );\n}\n\nexport default Navigation;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Field from './Field';\nimport Navigation from './Navigation';\n\nconst renderFields = (state, buttonHandler) => {\n  return state.fields.map((value, index) => {\n    return <Field title={value.title} description={value.description} number={index+1} key={index} reactKey={index} scaleNum={value.scaleNum} buttonHandler={buttonHandler} fieldValue={value.fieldValue}/>\n  })\n}\n\nconst Form = ({state, buttonHandler, settingsHandler, changeHandler}) => {\n  return (\n    <>\n    <div className=\"pain-scale\">\n      <Navigation title={'Smärtskattning'} state={state} settingsHandler={settingsHandler} changeHandler={changeHandler}/>\n      <div className=\"section\">\n        <div className=\"inner-content\">\n          <div className=\"card\">\n            <img className=\"card-image\" src=\"./scale-faces.png\" alt=\"\"></img>\n            <div className=\"card-child\">\n              <h3 className=\"card-title\">Hur gör jag?</h3>\n              <p className=\"card-description\">I följande 6 steg, observera personen och ange vad du ser. För steg 2. <b>Ansiktsuttryck</b>, kan du använda bilden ovan som hjälp.</p>\n            </div>\n          </div>\n\n          {renderFields(state, buttonHandler)}\n\n          <Link className={`link link-results ${state.disableShowResults ? 'disabled disabled-link' : ''}`} to={process.env.PUBLIC_URL + '/results'}>Se resultat </Link>\n          </div>\n          <img src=\"./watermark.svg\" alt=\"Watermark logo\" className=\"watermark\"></img>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Form;","import { Link } from 'react-router-dom';\nimport React, { useEffect, useState } from 'react';\nimport history from '../history';\n\nimport Navigation from './Navigation'\n\nconst Results = ({ state, settingsHandler, changeHandler }) => {\n    const [resultState, setState] = useState({\n      sent: '',\n      error: '',\n      spinner: false\n    })\n\n    useEffect(() => {\n      window.scrollTo(0,0);\n\n      if (state.disableShowResults) history.push('/');\n    }, [])\n\n    const resultIndicator = (x, y) => {\n      const pP = state.painPoints;\n      return pP >= x && pP <= y ? '' : 'inactive';\n    }\n\n    const handleSubmit = e => {\n      e.preventDefault();\n      e.persist();\n\n      setState({\n        spinner: true\n      })\n\n      const messageHtml = `\n        <ul>\n          ${state.fields.map((field, i) => {\n            return `<li>\n                <span>${i+1}. ${field.title}: </span>\n                <b>${field.fieldValue}</b>\n              </li>`;\n          }).join('')}\n        </ul>\n\n        <span><b>Total: </b>${state.painPoints}</span>\n\n        <br></br>\n\n        <span><b>Smärtnivå: </b></span>\n        ${resultIndicator(0,2) === 'inactive' ?  '' : '<span>Ingen (0-2)</span>'}\n        ${resultIndicator(3,7) === 'inactive' ?  '' : '<span>Mild (3-7)</span>'}\n        ${resultIndicator(8,13) === 'inactive' ?  '' : '<span>Måttlig (8-13)</span>'}\n        ${resultIndicator(14,18) === 'inactive' ?  '' : '<span>Svår (14-18)</span>'}\n\n        <br></br>\n        <br></br>\n\n        <span>Typ av smärta</span>\n        <ul>\n          <li>\n            <b>Långvarig: </b>${state.lasting ? 'Ja' : 'Nej'}\n          </li>\n          <li>\n            <b>Akut: </b>${state.accute ? 'Ja' : 'Nej'}\n          </li>\n          <li>\n            <b>Blandad: </b>${state.mixed ? 'Ja' : 'Nej'}\n          </li>\n        </ul>\n\n        <span><b>Namn på patient: </b>${state.patientName}</span>\n        <br></br>\n        <span><b>Ditt namn: </b>${state.yourName}</span>\n      `;\n\n      const templateParams = {\n        \"to_email\": state.receiverEmailInput,\n        // \"to_email\": \"Tommy.Boije@helsingborg.se\",\n        \"from_name\": \"Pain Scale App\",\n        \"from_email\": \"max.frederiksen@ecsolutions.se\",\n        \"reply_to\": \"max.frederiksen@ecsolutions.se\",\n        \"to_name\": state.yourName,\n        \"message_html\": messageHtml\n      };\n\n      window.emailjs.send('gmail', 'template_BxjtD38x', templateParams)\n        .then(() => {\n          setState({\n            sent: 'Bedömning skickad!',\n            spinner: false\n          })\n        })\n        .catch(error => setState({ error: 'Ett fel inträffade: Vänliged fyll i en giltig e-postadress'}));\n    \n    }\n\n    return (\n      <>\n        <div className=\"result\">\n          <Navigation title={'Resultat'} state={state} settingsHandler={settingsHandler} changeHandler={changeHandler}/>\n          <div className=\"section\">\n            <div className=\"inner-content\">\n                <div className=\"result-content\">\n                  <div className=\"result-scale\">\n                    <h3 className=\"sub-title\">Obeserverad smärtnivå</h3>\n                    <p className=\"sub-description\"><b>Dina observation tyder på att personens antagna smärtnivå är:</b></p>\n                    <div className=\"indications\">\n                      <div>\n                        <span className={`none ${resultIndicator(0, 2)}`}>Ingen</span>\n                        <span className={`mild ${resultIndicator(3, 7)}`}>Mild</span>\n                        <span className={`moderate ${resultIndicator(8, 13)}`}>Måttlig</span>\n                        <span className={`accute ${resultIndicator(14, 18)}`}>Svår</span>\n                      </div>\n                      <div>\n                        <span className={`none ${resultIndicator(0, 2)}`}>0-2</span>\n                        <span className={`mild ${resultIndicator(3, 7)}`}>3-7</span>\n                        <span className={`moderate ${resultIndicator(8, 13)}`}>8-13</span>\n                        <span className={`accute ${resultIndicator(14, 18)}`}>14+</span>\n                      </div>\n                    </div>\n                    \n                    {/* <input className=\"result-input\" type=\"text\" name=\"result-input\" maxLength=\"2\" value={state.painPoints} readOnly></input> */}\n                  </div>\n                  \n\n                  <form className=\"result-form\" onSubmit={handleSubmit}>\n                    <h3 className=\"sub-title\">Typ av smärta</h3>\n                    <br></br>\n\n                    <div className=\"checkboxes\">\n                      <div className=\"checkbox-button\">\n                        <label>\n                          <input className={`${state.lasting ? 'active' : ''}`} type=\"checkbox\" name=\"lasting\" checked={state.lasting} onChange={changeHandler}></input><span>Långvarig</span>\n                        </label>\n                      </div>\n                      <div className=\"checkbox-button\">\n                        <label>\n                          <input className={`${state.accute ? 'active' : ''}`} type=\"checkbox\" name=\"accute\" checked={state.accute} onChange={changeHandler}></input><span>Akut</span>\n                        </label>\n                      </div>\n                      <div className=\"checkbox-button\">\n                        <label>\n                          <input className={`${state.mixed ? 'active' : ''}`} type=\"checkbox\" name=\"mixed\" checked={state.mixed} onChange={changeHandler}></input><span>Blandad</span>\n                        </label>\n                      </div>\n                    </div>\n\n                    <label htmlFor=\"patient-name\"><h3 className=\"sub-title\">Patient</h3></label>\n                    <input className=\"input-text\" type=\"text\" name=\"patientName\" value={state.patientName} onChange={changeHandler} placeholder=\"Namn eller rumsnummer\"></input>\n\n                    <label htmlFor=\"your-name\"><h3 className=\"sub-title\">Sjuksköterska / Läkare</h3></label>\n                    <input className=\"input-text\" type=\"text\" name=\"yourName\" value={state.yourName} onChange={changeHandler} placeholder=\"Ditt namn\"></input>\n                    <div>\n                      <div className=\"bottom-buttons\">\n                        <div>\n                          <Link to={process.env.PUBLIC_URL + '/assessment'} className=\"link previous\"><i className=\"arrow-back\"></i> Tillbaka till observationen</Link>\n                        </div>\n                        <div>\n                          <button type=\"submit\" className={`link ${!state.receiverEmailInput ? 'disabled disabled-link' : ''}`}>\n                            <span class={`tooltiptext ${state.receiverEmailInput ? 'hidden' : ''}`}>Email eller telefon måste fyllas i under inställningar.</span>\n                            Skicka bedömmningen\n                          </button>\n                        </div>\n                      </div>\n                      <span>\n                        <div className={`spinner ${resultState.spinner ? '' : 'hidden'}`}>\n                          <div className=\"bounce1\"></div>\n                          <div className=\"bounce2\"></div>\n                          <div className=\"bounce3\"></div>\n                        </div>\n                      </span>\n                    </div>\n                    <span className=\"sent\">{resultState.sent}</span>\n                    <span className=\"error\">{resultState.error}</span>\n                  </form>\n              </div>\n            </div>\n            <img src=\"./watermark.svg\" alt=\"Watermark logo\" className=\"watermark\"></img>\n          </div>\n        </div>\n      </>\n    );\n};\n\nexport default Results;","import React, { Component } from 'react';\nimport { HashRouter, Route } from 'react-router-dom';\nimport history from './history';\n\nimport Form from './components/Form';\nimport Results from './components/Results';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      infoIconFilled: false,\n      disableShowResults: true,\n      hidePopup: true,\n      painPoints: 0,\n      patientName: '',\n      yourName: '',\n      receiverEmailInput: '',\n      receiverTelInput: '',\n      lasting: '',\n      accute: '',\n      mixed: '',\n      fields: [\n        {\n          title: 'Röstuttryck/ljud',\n          description: 'Tex om personen gnyr, jämrar sig eller låter',\n          scaleNum: 1,\n          fieldValue: null\n        },\n        {\n          title: 'Ansiktsuttryck',\n          description: 'Tex spänd, rynkar näsan, grimaserar eller ser rädd ut',\n          scaleNum: 1,\n          fieldValue: null\n        },\n        {\n          title: 'Förändrat kroppsspråk',\n          description: 'Tex rastlös, vaggar, skyddar en kroppsdel eller ihopkrupen',\n          scaleNum: 2,\n          fieldValue: null\n        },\n        {\n          title: 'Förändrat beteende',\n          description: 'Tex ökad förvirring, matvägran, ökad eller minskad kroppsaktivitet',\n          scaleNum: 2,\n          fieldValue: null\n        },\n        {\n          title: 'Fysiologisk förändring',\n          description: 'Tex förändrad kroppstemperatur, puls eller blodtryck, svettningar, rodnad eller blekhet i hyn',\n          scaleNum: 2,\n          fieldValue: null\n        },\n        {\n          title: 'Kroppsliga förändringar',\n          description: 'Tex rivet skinn, tryckskador, kontrakturer eller andra skador',\n          scaleNum: 2,\n          fieldValue: null\n        },\n      ]\n    };\n  }\n\n\n  buttonHandler = (e) => {\n    e.preventDefault();\n    e.persist();\n\n    const parent = e.target.parentNode;\n    const parentNextSibling = parent.parentNode.parentNode.parentNode.nextSibling;\n    const parentId = parent.getAttribute('data-id');\n    const children = parent.querySelectorAll('.button');\n    const activeChildValue = parent.querySelector('.active') ? parent.querySelector('.active').getAttribute('data-value') : 0;\n    const targetValue = e.target.getAttribute('data-value');\n    const total = parseInt(targetValue) - parseInt(activeChildValue);\n    const fieldsCopy = [...this.state.fields];\n    const disabledFields = document.querySelectorAll('.disabled-field');\n\n    parentNextSibling.classList.remove('disabled-field');\n    fieldsCopy[parentId].fieldValue = Number(targetValue);\n\n    if (disabledFields.length <= 0) this.setState({ disableShowResults: false });\n\n    if (Array.from(e.target.classList).indexOf('active') === -1) {\n      for (let child of children) {\n        child.classList.remove('active')\n      }\n\n      e.target.classList.add('active');\n\n      this.setState({\n        painPoints: this.state.painPoints + total,\n        fields: fieldsCopy\n      });\n    }\n  }\n\n  infoHandler = e => {\n    e.preventDefault();\n    e.persist();\n\n    this.setState((state) => ({\n      hideInfoBox: !state.hideInfoBox,\n      infoIconFilled: !state.infoIconFilled\n    }));\n  }\n\n  settingsHandler = e => {\n    e.preventDefault();\n    e.persist();\n\n    const body = document.getElementsByTagName('body')[0];\n    body.classList.toggle('noscroll');\n\n    this.setState((state) => ({\n      hidePopup: !state.hidePopup,\n    }));\n  }\n\n\n  changeHandler = (e) => {\n    e.persist();\n    const value = e.target.value;\n    const name = e.target.name;\n    const type = e.target.type;\n    const checked = e.target.checked;\n\n    if (type === 'checkbox') {\n      this.setState({\n        ...this.state,\n        [name]: checked\n      });\n    } else {\n      this.setState({\n        ...this.state,\n        [name]: value\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"page-content\">\n          <HashRouter history={history} basename=\"/pain-scale\">\n            <Route exact path={process.env.PUBLIC_URL + '/'} render={(props) => <Form {...props} state={this.state} buttonHandler={this.buttonHandler} settingsHandler={this.settingsHandler} changeHandler={this.changeHandler}/>} />\n            <Route exact path={process.env.PUBLIC_URL + '/assessment'} render={(props) => <Form {...props} state={this.state} buttonHandler={this.buttonHandler} settingsHandler={this.settingsHandler} changeHandler={this.changeHandler}/>} />\n            <Route exact path={process.env.PUBLIC_URL + '/results'} render={(props) => <Results {...props} state={this.state} settingsHandler={this.settingsHandler} changeHandler={this.changeHandler} />} />\n          </HashRouter>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}