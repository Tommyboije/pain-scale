{"version":3,"sources":["components/Banner.js","components/Field.js","components/Form.js","components/Results.js","App.js","index.js"],"names":["Banner","className","activeClass","dataValue","fieldValue","Number","Field","title","description","number","scaleNum","buttonHandler","reactKey","data-id","href","onClick","data-value","renderScale","Form","state","infoHandler","infoIconFilled","hideInfoBox","target","rel","fields","map","value","index","key","renderFields","to","Results","settingsHandler","React","useState","longLasting","accute","mixed","patientName","yourName","sent","spinner","resultState","setState","resultIndicator","x","y","pP","painPoints","handleChange","e","persist","name","type","checked","hideSettingsBox","class","htmlFor","maxLength","readOnly","onSubmit","preventDefault","messageHtml","field","i","join","lasting","templateParams","window","emailjs","send","then","catch","error","console","log","onChange","App","parent","parentNode","parentId","getAttribute","children","querySelectorAll","activeChildValue","querySelector","targetValue","total","parseInt","fieldsCopy","Array","from","classList","indexOf","remove","add","exact","path","render","props","src","alt","Component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.2adc87a3.chunk.js","sourcesContent":["import React from 'react';\n\nconst Banner = () => {\n  return (\n      <div className=\"banners\">\n        <i className=\"banner-1\"></i>\n        <i className=\"banner-2\"></i>\n        <i className=\"banner-3\"></i>\n        <i className=\"banner-4\"></i>\n        <i className=\"banner-5\"></i>\n      </div>\n  );\n}\n\nexport default Banner;","import React from 'react';\n\nconst activeClass = (dataValue, fieldValue) => {\n  return dataValue === Number(fieldValue) ? 'active': '';\n}\n\nconst renderScale = (scaleNum, buttonHandler, reactKey, fieldValue) => {\n    switch(scaleNum) {\n      case 1:\n        return (\n          <div className=\"scale-info\" data-id={reactKey}>\n            <a href=\"# \" className={`button ${activeClass(0, fieldValue)}`} onClick={buttonHandler} data-value=\"0\">Inte alls=0</a>\n            <a href=\"# \" className={`button ${activeClass(1, fieldValue)}`} onClick={buttonHandler} data-value=\"1\">Sällan=1</a>\n            <a href=\"# \" className={`button ${activeClass(2, fieldValue)}`} onClick={buttonHandler} data-value=\"2\">Ibland=2</a>\n            <a href=\"# \" className={`button ${activeClass(3, fieldValue)}`} onClick={buttonHandler} data-value=\"3\">Ofta=3</a>\n          </div>\n        );\n      case 2:\n        return (\n          <div className=\"scale-info\" data-id={reactKey}>\n            <a href=\"# \" className={`button ${activeClass(0, fieldValue)}`} onClick={buttonHandler} data-value=\"0\">Inte alls=0</a>\n            <a href=\"# \" className={`button ${activeClass(1, fieldValue)}`} onClick={buttonHandler} data-value=\"1\">Lite=1</a>\n            <a href=\"# \" className={`button ${activeClass(2, fieldValue)}`} onClick={buttonHandler} data-value=\"2\">Måttligt=2</a>\n            <a href=\"# \" className={`button ${activeClass(3, fieldValue)}`} onClick={buttonHandler} data-value=\"3\">Mycket=3</a>\n          </div>\n        );\n\n      default:\n        return (<></>);\n    }\n}\n\nconst Field = ({ title, description, number, scaleNum, buttonHandler, reactKey, fieldValue }) => {\n  return (\n      <div className=\"field\">\n        <div className=\"field-content\">\n          <h4 className=\"field-title\">{number}. {title}</h4>\n          <p className=\"field-description\">{description}</p>\n          <i className=\"word-break\"></i>\n          {renderScale(scaleNum, buttonHandler, reactKey, fieldValue)}\n        </div>\n      </div>\n  );\n}\n\nexport default Field;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Field from './Field';\n\nconst renderFields = (state, buttonHandler) => {\n  return state.fields.map((value, index) => {\n    return <Field title={value.title} description={value.description} number={index+1} key={index} reactKey={index} scaleNum={value.scaleNum} buttonHandler={buttonHandler} fieldValue={value.fieldValue}/>\n  })\n}\n\nconst Form = ({state, buttonHandler, infoHandler}) => {\n  return (\n    <>\n    <div className=\"pain-scale\">\n      <div className=\"top-bar\">\n        <h1 className=\"title\">Bedömning</h1>\n        <a href=\"# \" onClick={infoHandler} className=\"info-link\"><i className={`info-icon ${state.infoIconFilled ? 'info-filled' : ''}`}></i></a>\n      </div>\n        <div className={`info-box ${state.hideInfoBox ? 'hidden' : ''}`}>\n          <p>Det här verktyget bygger på den väletablerade modellen Abbey Pain Scale. Du kan läsa mer om verktyget och dess användning <a href=\"https://www.vardhandboken.se/vard-och-behandling/akut-bedomning-och-skattning/smartskattning-av-akut-och-postoperativ-smarta/smartskattningsinstrument/\" target=\"_blank\" rel=\"noopener noreferrer\"> här</a></p>\n        </div>\n        <p className=\"intro\">Observera personen och bedöm graden av påverkan med skalan <b>0 till 3</b> i punkt 1 till 6 nedan!</p>\n        {renderFields(state, buttonHandler)}\n\n        <Link className=\"link link-results\" to=\"/results\">Se resultat ></Link>\n      </div>\n    </>\n  );\n};\n\nexport default Form;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Results = ({ state, settingsHandler }) => {\n    const [resultState, setState] = React.useState({\n      longLasting: false,\n      accute: false,\n      mixed: false,\n      patientName: '',\n      yourName: '',\n      sent: '',\n      spinner: false\n    })\n\n    const resultIndicator = (x, y) => {\n      const pP = state.painPoints;\n      return pP >= x && pP <= y ? '' : 'inactive';\n    }\n    \n    const handleChange = (e) => {\n      e.persist();\n      const value = e.target.value;\n      const name = e.target.name;\n      const type = e.target.type;\n      const checked = e.target.checked;\n\n      if (type === 'checkbox') {\n        setState({\n          ...resultState,\n          [name]: checked\n        });\n      } else {\n        setState({\n          ...resultState,\n          [name]: value\n        });\n      }\n    }\n\n    const handleSubmit = e => {\n      e.preventDefault();\n      e.persist();\n\n      setState({\n        spinner: true\n      })\n\n      const messageHtml = `\n        <ul>\n          ${state.fields.map((field, i) => {\n            return `<li>\n                <span>${i+1}. ${field.title}: </span>\n                <b>${field.fieldValue}</b>\n              </li>`;\n          }).join('')}\n        </ul>\n\n        <span><b>Total: </b>${state.painPoints}</span>\n\n        <br></br>\n\n        <span><b>Smärtnivå: </b></span>\n        ${resultIndicator(0,2) === 'inactive' ?  '' : '<span>Ingen (0-2)</span>'}\n        ${resultIndicator(3,7) === 'inactive' ?  '' : '<span>Mild (3-7)</span>'}\n        ${resultIndicator(8,13) === 'inactive' ?  '' : '<span>Måttlig (8-13)</span>'}\n        ${resultIndicator(14,18) === 'inactive' ?  '' : '<span>Svår (14-18)</span>'}\n\n        <br></br>\n        <br></br>\n\n        <span>Typ av smärta</span>\n        <ul>\n          <li>\n            <b>Långvarig: </b>${resultState.lasting ? 'Ja' : 'Nej'}\n          </li>\n          <li>\n            <b>Akut: </b>${resultState.accute ? 'Ja' : 'Nej'}\n          </li>\n          <li>\n            <b>Blandad: </b>${resultState.mixed ? 'Ja' : 'Nej'}\n          </li>\n        </ul>\n\n        <span><b>Namn på patient: </b>${resultState.patientName}</span>\n        <br></br>\n        <span><b>Ditt namn: </b>${resultState.yourName}</span>\n      `;\n\n      const templateParams = {\n        // \"to_email\": \"max.frederiksen@ecsolutions.se\",\n        \"to_email\": \"Tommy.Boije@helsingborg.se\",\n        \"from_name\": \"Pain Scale App\",\n        \"from_email\": \"max.frederiksen@ecsolutions.se\",\n        \"reply_to\": \"max.frederiksen@ecsolutions.se\",\n        \"to_name\": resultState.yourName,\n        \"message_html\": messageHtml\n      };\n\n      window.emailjs.send('gmail', 'template_BxjtD38x', templateParams)\n        .then(() => {\n          setState({\n            sent: 'Bedömning skickad!',\n            spinner: false\n          })\n        })\n        .catch(error => console.log(error));\n    \n    }\n    \n    return (\n      <>\n        <div className=\"result\">\n        <div className=\"top-bar\">\n          <h1>Resultat</h1>\n          <a href=\"# \" onClick={settingsHandler} className=\"settings-link\"><i className=\"settings-icon\"></i></a>\n        </div>\n        <div className={`settings-box ${state.hideSettingsBox ? 'hidden' : ''}`}>\n          <p>Här kan du välja vem som ska få bedömmningen.</p>\n          <div class=\"settings-content\">\n            <div>\n              <label htmlFor=\"telephone\">Telefon</label>\n              <br></br>\n              <label htmlFor=\"email\">E-postadress</label>\n            </div>\n            <div>\n              <input type=\"email\" name=\"email\"></input>\n              <br></br>\n              <input type=\"tel\" name=\"telephone\"></input>\n            </div>\n          </div>\n          <a href=\"# \" className=\"close\" onClick={settingsHandler}>Klar</a>\n        </div>\n          <i className=\"word-break\"></i>\n          <p>Dina observation tyder på att personens antagna smärtnivå är:</p>\n          <div className=\"result-content\">\n            <div className=\"result-scale\">\n              <span className={`none ${resultIndicator(0, 2)}`}>Ingen (0-2)</span>\n              <span className={`mild ${resultIndicator(3, 7)}`}>Mild (3-7)</span>\n              <span className={`moderate ${resultIndicator(8, 13)}`}>Måttlig (8-13)</span>\n              <span className={`accute ${resultIndicator(14, 18)}`}>Svår (14+)</span>\n              \n              <input className=\"result-input\" type=\"text\" name=\"result-input\" maxLength=\"2\" value={state.painPoints} readOnly></input>\n            </div>\n            \n\n            <form className=\"result-form\" onSubmit={handleSubmit}>\n              <span><b>Typ av smärta</b></span>\n              <br></br>\n              <span>Ange typ av smärta nedan</span>\n              <br></br>\n              <br></br>\n\n              <div className=\"checkbox-parent\">\n                <div className=\"checkbox-labels\">\n                  <label htmlFor=\"long-lasting\">Långvarig</label>\n                  <label htmlFor=\"long-lasting\">Akut</label>\n                  <label htmlFor=\"long-lasting\">Blandad</label>\n                </div>\n                <div className=\"checkboxes\">\n                  <label class=\"checkbox-container\">\n                    <input className=\"input-checkbox\" type=\"checkbox\" name=\"lasting\" checked={resultState.lasting} onChange={handleChange}></input>\n                    <span class=\"checkmark\"></span>\n                  </label>\n                  <label class=\"checkbox-container\">\n                    <input className=\"input-checkbox\" type=\"checkbox\" name=\"accute\" checked={resultState.accute} onChange={handleChange}></input>\n                    <span class=\"checkmark\"></span>\n                  </label>\n                  <label class=\"checkbox-container\">\n                    <input className=\"input-checkbox\" type=\"checkbox\" name=\"mixed\" checked={resultState.mixed} onChange={handleChange}></input>\n                    <span class=\"checkmark\"></span>\n                  </label>\n                </div>\n              </div>\n\n              <label htmlFor=\"patient-name\">Namn på patient / rumsnummer</label>\n              <input className=\"input-text\" type=\"text\" name=\"patientName\" value={resultState.patientName} onChange={handleChange}></input>\n\n              <label htmlFor=\"your-name\">Ditt namn</label>\n              <input className=\"input-text\" type=\"text\" name=\"yourName\" value={resultState.yourName} onChange={handleChange}></input>\n              <div>\n                <Link to=\"pain-scale\" className=\"previous\">&lt; Föregående</Link>\n                <button type=\"submit\" className=\"link\">Skicka</button>\n                <span>\n                  <div class={`spinner ${resultState.spinner ? '' : 'hidden'}`}>\n                    <div class=\"bounce1\"></div>\n                    <div class=\"bounce2\"></div>\n                    <div class=\"bounce3\"></div>\n                  </div>\n                </span>\n              </div>\n              <span class=\"sent\">{resultState.sent}</span>\n            </form>\n\n          </div>\n        </div>\n      </>\n    );\n};\n\nexport default Results;","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport Banner from './components/Banner';\nimport Form from './components/Form';\nimport Results from './components/Results';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      infoIconFilled: false,\n      hideInfoBox: true,\n      hideSettingsBox: true,\n      painPoints: 0,\n      fields: [\n        {\n          title: 'Röstuttryck/ljud',\n          description: 'Tex om personen gnyr, jämrar sig eller låter',\n          scaleNum: 1,\n          fieldValue: 0\n        },\n        {\n          title: 'Ansiktsuttryck',\n          description: 'Tex spänd, rynkar näsan, grimaserar eller ser rädd ut',\n          scaleNum: 1,\n          fieldValue: 0\n        },\n        {\n          title: 'Förändrat kroppsspråk',\n          description: 'Tex rastlös, vaggar, skyddar en kroppsdel eller ihopkrupen',\n          scaleNum: 2,\n          fieldValue: 0\n        },\n        {\n          title: 'Förändrat beteende',\n          description: 'Tex ökad förvirring, matvägran, ökad eller minskad kroppsaktivitet',\n          scaleNum: 2,\n          fieldValue: 0\n        },\n        {\n          title: 'Fysiologisk förändring',\n          description: 'Tex förändrad kroppstemperatur, puls eller blodtryck, svettningar, rodnad eller blekhet i hyn',\n          scaleNum: 2,\n          fieldValue: 0\n        },\n        {\n          title: 'Kroppsliga förändringar',\n          description: 'Tex rivet skinn, tryckskador, kontrakturer eller andra skador',\n          scaleNum: 2,\n          fieldValue: 0\n        },\n      ]\n    };\n  }\n\n\n  buttonHandler = (e) => {\n    e.preventDefault();\n    e.persist();\n\n    const parent = e.target.parentNode;\n    const parentId = parent.getAttribute('data-id');\n    const children = parent.querySelectorAll('.button');\n    const activeChildValue = parent.querySelector('.active').getAttribute('data-value');\n    const targetValue = e.target.getAttribute('data-value');\n    const total = parseInt(targetValue) - parseInt(activeChildValue);\n    const fieldsCopy = [...this.state.fields];\n    fieldsCopy[parentId].fieldValue = targetValue;\n\n    if (Array.from(e.target.classList).indexOf('active') === -1) {\n      for (let child of children) {\n        child.classList.remove('active')\n      }\n\n      e.target.classList.add('active');\n\n      this.setState({\n        painPoints: this.state.painPoints + total,\n        fields: fieldsCopy\n      });\n    }\n  }\n\n  infoHandler = e => {\n    e.preventDefault();\n    e.persist();\n\n    this.setState((state) => ({\n      hideInfoBox: !state.hideInfoBox,\n      infoIconFilled: !state.infoIconFilled\n    }));\n  }\n\n  settingsHandler = e => {\n    e.preventDefault();\n    e.persist();\n\n    this.setState((state) => ({\n      hideSettingsBox: !state.hideSettingsBox,\n    }));\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Banner />\n        <div className=\"page-content\">\n          <Router>\n            <Route exact path=\"/\" render={(props) => <Form {...props} state={this.state} buttonHandler={this.buttonHandler} infoHandler={this.infoHandler}/>} />\n            <Route exact path=\"/pain-scale\" render={(props) => <Form {...props} state={this.state} buttonHandler={this.buttonHandler} infoHandler={this.infoHandler}/>} />\n            <Route exact path=\"/results\" render={(props) => <Results {...props} state={this.state} settingsHandler={this.settingsHandler}/>} />\n          </Router>\n        </div>\n        <footer>\n          <div class=\"container\">\n            <div class=\"footer-flex\">\n              <div class=\"footer-child\">\n                <p className=\"footer-content\">\n                  <h3>Kontakt</h3>\n                  <br></br>\n                  <b>Telefon: </b> 042-10 50 00\n                  <br></br>\n                  <b>E-postadress: </b><a href=\"mailto:kontaktcenter@helsingborg.se\">kontaktcenter@helsingborg.se</a>\n                </p>\n              </div>\n              <div class=\"footer-child\">\n                <span className=\"copyright\">App utvecklad av Max Frederiksen, Hbg Works, Helsingborg</span>\n              </div>\n              <div class=\"footer-child\">\n                <img src=\"/logo-footer.svg\" alt=\"\" className=\"logo-footer\"></img>\n              </div>\n            </div>\n          </div>\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}