{"version":3,"sources":["components/Banner.js","components/Field.js","components/Form.js","components/Landing.js","components/Results.js","App.js","index.js"],"names":["Banner","className","activeClass","dataValue","fieldValue","Field","title","description","number","scaleNum","buttonHandler","reactKey","console","log","data-id","onClick","data-value","href","renderScale","Form","state","fields","map","value","index","key","renderFields","to","Landing","src","alt","resultIndicator","x","y","pP","painPoints","Results","type","name","maxLength","readOnly","htmlFor","App","e","preventDefault","persist","parent","target","parentNode","parentId","getAttribute","children","querySelectorAll","activeChildValue","querySelector","targetValue","total","parseInt","fieldsCopy","Array","from","classList","indexOf","remove","add","setState","exact","path","component","render","props","Component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.97b497df.chunk.js","sourcesContent":["import React from 'react';\n\nconst Banner = () => {\n  return (\n      <div className=\"banners\">\n        <i className=\"banner-1\"></i>\n        <i className=\"banner-2\"></i>\n        <i className=\"banner-3\"></i>\n        <i className=\"banner-4\"></i>\n        <i className=\"banner-5\"></i>\n      </div>\n  );\n}\n\nexport default Banner;","import React from 'react';\n\nconst activeClass = (dataValue, fieldValue) => {\n  return dataValue == fieldValue ? 'active': '';\n}\n\nconst renderScale = (scaleNum, buttonHandler, reactKey, fieldValue) => {\n  console.log(fieldValue);\n    switch(scaleNum) {\n      case 1:\n        return (\n          <div className=\"scale-info\" data-id={reactKey}>\n            <a className={`button ${activeClass(0, fieldValue)}`} onClick={buttonHandler} data-value=\"0\" href=\"#\">Inte alls=0</a>\n            <a className={`button ${activeClass(1, fieldValue)}`} onClick={buttonHandler} data-value=\"1\" href=\"#\">Sällan=1</a>\n            <a className={`button ${activeClass(2, fieldValue)}`} onClick={buttonHandler} data-value=\"2\" href=\"#\">Ibland=2</a>\n            <a className={`button ${activeClass(3, fieldValue)}`} onClick={buttonHandler} data-value=\"3\" href=\"#\">Ofta=3</a>\n          </div>\n        );\n      break;\n      case 2:\n        return (\n          <div className=\"scale-info\" data-id={reactKey}>\n            <a className={`button ${activeClass(0, fieldValue)}`} onClick={buttonHandler} data-value=\"0\" href=\"#\">Inte alls=0</a>\n            <a className={`button ${activeClass(1, fieldValue)}`} onClick={buttonHandler} data-value=\"1\" href=\"#\">Lite=1</a>\n            <a className={`button ${activeClass(2, fieldValue)}`} onClick={buttonHandler} data-value=\"2\" href=\"#\">Måttligt=2</a>\n            <a className={`button ${activeClass(3, fieldValue)}`} onClick={buttonHandler} data-value=\"3\" href=\"#\">Mycket=3</a>\n          </div>\n        );\n      break;\n\n      default:\n        return (<></>);\n    }\n}\n\nconst Field = ({ title, description, number, scaleNum, buttonHandler, reactKey, fieldValue }) => {\n  return (\n      <div className=\"field\">\n        <div className=\"field-content\">\n          <h4 className=\"field-title\">{number}. {title}</h4>\n          <p className=\"field-description\">{description}</p>\n          <i className=\"word-break\"></i>\n          {renderScale(scaleNum, buttonHandler, reactKey, fieldValue)}\n        </div>\n      </div>\n  );\n}\n\nexport default Field;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Field from './Field';\n\nconst renderFields = (state, buttonHandler) => {\n  return state.fields.map((value, index) => {\n    return <Field title={value.title} description={value.description} number={index+1} key={index} reactKey={index} scaleNum={value.scaleNum} buttonHandler={buttonHandler} fieldValue={value.fieldValue}/>\n  })\n}\n\nconst Form = ({state, buttonHandler}) => {\n  return (\n    <>\n    <div className=\"pain-scale\">\n      <h1 className=\"title\">Bedömning</h1>\n        <p className=\"intro\">Observera personen och bedöm graden av påverkan med skalan <b>0 till 3</b> i punkt 1 till 6 nedan!</p>\n        {renderFields(state, buttonHandler)}\n\n        <Link className=\"link link-results\" to=\"/results\">Se resultat ></Link>\n      </div>\n    </>\n  );\n};\n\nexport default Form;","import React from 'react';\nimport { Link } from \"react-router-dom\";\n\nconst Landing = () => {\n  return (\n    <>\n    <div className=\"landing\">\n      <h3>Abbey pain scale</h3>\n      <br></br>\n      <p>\n        Ett verktyg för bedömning av smärta hos personer med demenssjukdom, som har svårt att beskriva sin smärta i tal.\n        <br></br><br></br>\n        Observera personen och bedöm graden av påverkan med skalan <b>0 till 3</b> i punkt <b>1 till 6</b>.\n      </p>\n\n      <Link className=\"link\" to=\"/pain-scale\">Börja</Link>\n\n      <img src=\"./logo.svg\" alt=\"Helsingborgs Stadsvapen\" className=\"logo\"></img>\n    </div>\n    </>\n  );\n};\n\nexport default Landing;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst resultIndicator = (x, y, state) => {\n  const pP = state.painPoints;\n  return pP >= x && pP <= y ? '' : 'inactive';\n}\n\nconst Results = ({state}) => {\n  return (\n    <>\n      <div className=\"result\">\n        <h3>Resultat</h3>\n        <i className=\"word-break\"></i>\n        <p>Dina observation tyder på att personens antagna smärtnivå är:</p>\n        <div className=\"result-content\">\n          <div className=\"result-scale\">\n            <span className={`none ${resultIndicator(0, 2, state)}`}>Ingen (0-2)</span>\n            <span className={`mild ${resultIndicator(3, 7, state)}`}>Mild (3-7)</span>\n            <span className={`moderate ${resultIndicator(8, 13, state)}`}>Måttlig (8-13)</span>\n            <span className={`accute ${resultIndicator(14, 18, state)}`}>Svår (14+)</span>\n            \n            <input className=\"result-input\" type=\"text\" name=\"result-input\" maxLength=\"2\" value={state.painPoints} readOnly></input>\n          </div>\n          \n\n          <form className=\"result-form\">\n            <span><b>Typ av smärta</b></span>\n            <br></br>\n            <span>Ange typ av smärta nedan</span>\n            <br></br>\n            <br></br>\n\n            <div className=\"checkboxes\">\n              <div>\n                <label htmlFor=\"long-lasting\">Långvarig</label>\n                <label htmlFor=\"long-lasting\">Akut</label>\n                <label htmlFor=\"long-lasting\">Blandad</label>\n              </div>\n              <div>\n              <input className=\"input-checkbox\" type=\"checkbox\" name=\"long-lasting\"></input>\n              <input className=\"input-checkbox\" type=\"checkbox\" name=\"accute\"></input>\n              <input className=\"input-checkbox\" type=\"checkbox\" name=\"mixed\"></input>\n              </div>\n            </div>\n\n            <label htmlFor=\"patient-name\">Namn på patient</label>\n            <input type=\"text\" name=\"name\" ></input>\n\n            <label htmlFor=\"your-name\">Ditt namn</label>\n            <input type=\"text\" name=\"your-name\" ></input>\n          </form>\n\n          <Link to=\"pain-scale\" className=\"previous\">&lt; Föregående</Link>\n          \n          <a href=\"#\" className=\"link\">Skicka</a>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Results;","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport Banner from './components/Banner';\nimport Form from './components/Form';\nimport Landing from './components/Landing';\nimport Results from './components/Results';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      painPoints: 0,\n      fields: [\n        {\n          title: 'Röstuttryck/ljud',\n          description: 'Tex om personen gnyr, jämrar sig eller låter',\n          scaleNum: 1,\n          fieldValue: 0\n        },\n        {\n          title: 'Ansiktsuttryck',\n          description: 'Tex spänd, rynkar näsan, grimaserar eller ser rädd ut',\n          scaleNum: 1,\n          fieldValue: 0\n        },\n        {\n          title: 'Förändrat kroppsspråk',\n          description: 'Tex rastlös, vaggar, skyddar en kroppsdel eller ihopkrupen',\n          scaleNum: 2,\n          fieldValue: 0\n        },\n        {\n          title: 'Förändrat beteende',\n          description: 'Tex ökad förvirring, matvägran, ökad eller minskad kroppsaktivitet',\n          scaleNum: 2,\n          fieldValue: 0\n        },\n        {\n          title: 'Fysiologisk förändring',\n          description: 'Tex förändrad kroppstemperatur, puls eller blodtryck, svettningar, rodnad eller blekhet i hyn',\n          scaleNum: 2,\n          fieldValue: 0\n        },\n        {\n          title: 'Kroppsliga förändringar',\n          description: 'Tex rivet skinn, tryckskador, kontrakturer eller andra skador',\n          scaleNum: 2,\n          fieldValue: 0\n        },\n      ]\n    };\n  }\n\n\n  buttonHandler = (e) => {\n    e.preventDefault();\n    e.persist();\n\n    const parent = e.target.parentNode;\n    const parentId = parent.getAttribute('data-id');\n    const children = parent.querySelectorAll('.button');\n    const activeChildValue = parent.querySelector('.active').getAttribute('data-value');\n    const targetValue = e.target.getAttribute('data-value');\n    const total = parseInt(targetValue) - parseInt(activeChildValue);\n    const fieldsCopy = [...this.state.fields];\n    fieldsCopy[parentId].fieldValue = targetValue;\n\n    if (Array.from(e.target.classList).indexOf('active') === -1) {\n      for (let child of children) {\n        child.classList.remove('active')\n      }\n\n      e.target.classList.add('active');\n\n      this.setState({\n        painPoints: this.state.painPoints + total,\n        fields: fieldsCopy\n      }, () => console.log(this.state));\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Banner />\n        <div className=\"page-content\">\n          <Router>\n            <Route exact path=\"/\" component={Landing} />\n            <Route exact path=\"/pain-scale\" render={(props) => <Form {...props} state={this.state} buttonHandler={this.buttonHandler}/>} />\n            <Route exact path=\"/results\" render={(props) => <Results {...props} state={this.state}/>} />\n          </Router>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}